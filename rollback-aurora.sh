#!/bin/bash

# Aurora Fixes Rollback Script
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—Ç–∫–∞—Ç–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π Aurora Design System

set -e

echo "üîÑ Aurora Fixes Rollback Script"
echo "================================"
echo ""

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
log_info() {
  echo -e "${BLUE}‚Ñπ${NC} $1"
}

log_success() {
  echo -e "${GREEN}‚úì${NC} $1"
}

log_warning() {
  echo -e "${YELLOW}‚ö†${NC} $1"
}

log_error() {
  echo -e "${RED}‚úó${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è git
if ! command -v git &> /dev/null; then
  log_error "Git –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ git –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞."
  exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –º—ã –≤ git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
if ! git rev-parse --git-dir > /dev/null 2>&1; then
  log_error "–ù–µ git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π. –û—Ç–∫–∞—Ç –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω."
  exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ git
if ! git diff --quiet || ! git diff --cached --quiet; then
  log_warning "–£ –≤–∞—Å –µ—Å—Ç—å –Ω–µ–∑–∞–∫–æ–º–º–∏—á–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è."
  read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/n) " -n 1 -r
  echo
  if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    log_info "–û—Ç–∫–∞—Ç –æ—Ç–º–µ–Ω–µ–Ω."
    exit 0
  fi
fi

echo ""
log_info "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–∫–∞—Ç–∞:"
echo ""
echo "1) –û—Ç–∫–∞—Ç –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É –∫–æ–º–º–∏—Ç—É (–æ—Ç–º–µ–Ω–∏—Ç—å –≤—Å–µ –Ω–µ–∑–∞–∫–æ–º–º–∏—á–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è)"
echo "2) –û—Ç–∫–∞—Ç –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –∫–æ–º–º–∏—Ç—É"
echo "3) –°–æ–∑–¥–∞—Ç—å backup –∏ –æ—Ç–∫–∞—Ç–∏—Ç—å —Ñ–∞–π–ª—ã Aurora"
echo "4) –û—Ç–º–µ–Ω–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –∫–æ–º–º–∏—Ç (—Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è)"
echo "5) –û—Ç–º–µ–Ω–∞"
echo ""
read -p "–í–∞—à –≤—ã–±–æ—Ä (1-5): " choice

case $choice in
  1)
    log_info "–û—Ç–∫–∞—Ç –≤—Å–µ—Ö –Ω–µ–∑–∞–∫–æ–º–º–∏—á–µ–Ω–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π..."
    git reset --hard HEAD
    git clean -fd
    log_success "–û—Ç–∫–∞—Ç –∑–∞–≤–µ—Ä—à–µ–Ω. –í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–º–µ–Ω–µ–Ω—ã."
    ;;

  2)
    log_info "–ü–æ–∫–∞–∑—ã–≤–∞—é –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∫–æ–º–º–∏—Ç—ã:"
    git log --oneline -10
    echo ""
    read -p "–í–≤–µ–¥–∏—Ç–µ hash –∫–æ–º–º–∏—Ç–∞ –¥–ª—è –æ—Ç–∫–∞—Ç–∞: " commit_hash

    if git rev-parse --verify "$commit_hash" &> /dev/null; then
      log_warning "–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –æ—Ç–∫–∞—Ç–∏—Ç –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–æ –∫–æ–º–º–∏—Ç–∞ $commit_hash"
      read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/n) " -n 1 -r
      echo
      if [[ $REPLY =~ ^[Yy]$ ]]; then
        git reset --hard "$commit_hash"
        log_success "–û—Ç–∫–∞—Ç –∫ –∫–æ–º–º–∏—Ç—É $commit_hash –∑–∞–≤–µ—Ä—à–µ–Ω."
      else
        log_info "–û—Ç–∫–∞—Ç –æ—Ç–º–µ–Ω–µ–Ω."
      fi
    else
      log_error "–ù–µ–≤–µ—Ä–Ω—ã–π hash –∫–æ–º–º–∏—Ç–∞: $commit_hash"
      exit 1
    fi
    ;;

  3)
    log_info "–°–æ–∑–¥–∞—é backup —Ñ–∞–π–ª–æ–≤ Aurora..."

    backup_dir="aurora-backup-$(date +%Y%m%d-%H%M%S)"
    mkdir -p "$backup_dir"

    # –ö–æ–ø–∏—Ä—É–µ–º Aurora —Ñ–∞–π–ª—ã
    if [ -d "src/components/aurora" ]; then
      cp -r src/components/aurora "$backup_dir/"
      log_success "Backup —Å–æ–∑–¥–∞–Ω: $backup_dir/aurora"
    fi

    if [ -d "src/hooks/aurora" ]; then
      cp -r src/hooks/aurora "$backup_dir/"
      log_success "Backup —Å–æ–∑–¥–∞–Ω: $backup_dir/hooks/aurora"
    fi

    if [ -d "src/lib/aurora" ]; then
      cp -r src/lib/aurora "$backup_dir/"
      log_success "Backup —Å–æ–∑–¥–∞–Ω: $backup_dir/lib/aurora"
    fi

    if [ -f "src/index.css" ]; then
      cp src/index.css "$backup_dir/"
      log_success "Backup —Å–æ–∑–¥–∞–Ω: $backup_dir/index.css"
    fi

    log_info "–û—Ç–∫–∞—Ç—ã–≤–∞—é —Ñ–∞–π–ª—ã Aurora –∏–∑ git..."
    git checkout HEAD -- src/components/aurora/ src/hooks/aurora/ src/lib/aurora/ src/index.css 2>/dev/null || true

    log_success "–û—Ç–∫–∞—Ç –∑–∞–≤–µ—Ä—à–µ–Ω. Backup —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ $backup_dir/"
    ;;

  4)
    log_info "–û—Ç–º–µ–Ω—è—é –ø–æ—Å–ª–µ–¥–Ω–∏–π –∫–æ–º–º–∏—Ç (—Å–æ—Ö—Ä–∞–Ω—è—è –∏–∑–º–µ–Ω–µ–Ω–∏—è)..."
    git reset --soft HEAD~1
    log_success "–ü–æ—Å–ª–µ–¥–Ω–∏–π –∫–æ–º–º–∏—Ç –æ—Ç–º–µ–Ω–µ–Ω. –ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã."
    ;;

  5)
    log_info "–û—Ç–∫–∞—Ç –æ—Ç–º–µ–Ω–µ–Ω."
    exit 0
    ;;

  *)
    log_error "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä: $choice"
    exit 1
    ;;
esac

echo ""
log_info "–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å:"
git status --short

echo ""
log_info "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ—Å–ª–µ –æ—Ç–∫–∞—Ç–∞:"
echo "  1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è: git status"
echo "  2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç—ã: npm run test"
echo "  3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–±–æ—Ä–∫—É: npm run build"
echo "  4. –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: npm install"
echo ""
log_success "–ì–æ—Ç–æ–≤–æ!"
