import React from 'react';
import {
  Sheet,
  SheetContent,
  SheetDescription,
  SheetHeader,
  SheetTitle,
  SheetTrigger,
} from '@/components/ui/sheet';
import { Button } from '@/components/ui/button';
import { Keyboard } from 'lucide-react';

interface Shortcut {
  keys: string[];
  description: string;
  category: string;
}

const shortcuts: Shortcut[] = [
  // Navigation
  { keys: ['‚Üë', '‚Üì', '‚Üê', '‚Üí'], description: '–ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —è—á–µ–π–∫–∞–º', category: '–ù–∞–≤–∏–≥–∞—Ü–∏—è' },
  { keys: ['Tab'], description: '–°–ª–µ–¥—É—é—â–∞—è —è—á–µ–π–∫–∞', category: '–ù–∞–≤–∏–≥–∞—Ü–∏—è' },
  { keys: ['Shift', 'Tab'], description: '–ü—Ä–µ–¥—ã–¥—É—â–∞—è —è—á–µ–π–∫–∞', category: '–ù–∞–≤–∏–≥–∞—Ü–∏—è' },
  { keys: ['Home'], description: '–ü–µ—Ä–≤–∞—è —è—á–µ–π–∫–∞ –≤ —Å—Ç—Ä–æ–∫–µ', category: '–ù–∞–≤–∏–≥–∞—Ü–∏—è' },
  { keys: ['End'], description: '–ü–æ—Å–ª–µ–¥–Ω—è—è —è—á–µ–π–∫–∞ –≤ —Å—Ç—Ä–æ–∫–µ', category: '–ù–∞–≤–∏–≥–∞—Ü–∏—è' },
  { keys: ['Ctrl', 'Home'], description: '–ü–µ—Ä–≤–∞—è —è—á–µ–π–∫–∞ —Ç–∞–±–ª–∏—Ü—ã', category: '–ù–∞–≤–∏–≥–∞—Ü–∏—è' },
  { keys: ['Ctrl', 'End'], description: '–ü–æ—Å–ª–µ–¥–Ω—è—è —è—á–µ–π–∫–∞ —Ç–∞–±–ª–∏—Ü—ã', category: '–ù–∞–≤–∏–≥–∞—Ü–∏—è' },

  // Editing
  { keys: ['Enter'], description: '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —è—á–µ–π–∫—É', category: '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ' },
  { keys: ['Escape'], description: '–û—Ç–º–µ–Ω–∏—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ', category: '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ' },
  { keys: ['Double Click'], description: '–ë—ã—Å—Ç—Ä–æ–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ', category: '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ' },

  // Selection
  { keys: ['Shift', '‚Üë‚Üì‚Üê‚Üí'], description: '–í—ã–¥–µ–ª–µ–Ω–∏–µ —è—á–µ–µ–∫', category: '–í—ã–¥–µ–ª–µ–Ω–∏–µ' },
  { keys: ['Ctrl', 'A'], description: '–í—ã–¥–µ–ª–∏—Ç—å –≤—Å—ë', category: '–í—ã–¥–µ–ª–µ–Ω–∏–µ' },
  { keys: ['Escape'], description: '–°–Ω—è—Ç—å –≤—ã–¥–µ–ª–µ–Ω–∏–µ', category: '–í—ã–¥–µ–ª–µ–Ω–∏–µ' },

  // Clipboard
  { keys: ['Ctrl', 'C'], description: '–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å —è—á–µ–π–∫—É', category: '–ë—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞' },
  { keys: ['Ctrl', 'V'], description: '–í—Å—Ç–∞–≤–∏—Ç—å –≤ —è—á–µ–π–∫—É', category: '–ë—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞' },

  // Undo/Redo
  { keys: ['Ctrl', 'Z'], description: '–û—Ç–º–µ–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–µ', category: '–ò—Å—Ç–æ—Ä–∏—è' },
  { keys: ['Ctrl', 'Y'], description: '–í–µ—Ä–Ω—É—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–µ', category: '–ò—Å—Ç–æ—Ä–∏—è' },

  // Row Actions
  { keys: ['Right Click'], description: '–ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é —Å—Ç—Ä–æ–∫–∏', category: '–î–µ–π—Å—Ç–≤–∏—è' },
  { keys: ['Ctrl', 'D'], description: '–î—É–±–ª–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—Ä–æ–∫—É', category: '–î–µ–π—Å—Ç–≤–∏—è' },
  { keys: ['Del'], description: '–£–¥–∞–ª–∏—Ç—å —Å—Ç—Ä–æ–∫—É', category: '–î–µ–π—Å—Ç–≤–∏—è' },
];

const categories = Array.from(new Set(shortcuts.map(s => s.category)));

export function KeyboardShortcutsHelp() {
  return (
    <Sheet>
      <SheetTrigger asChild>
        <Button variant="ghost" size="sm">
          <Keyboard className="mr-2 h-4 w-4" />
          –ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏
        </Button>
      </SheetTrigger>
      <SheetContent side="right" className="w-full sm:max-w-lg overflow-y-auto">
        <SheetHeader>
          <SheetTitle>–ö–ª–∞–≤–∏–∞—Ç—É—Ä–Ω—ã–µ —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è</SheetTitle>
          <SheetDescription>
            –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–∏ —Å–æ—á–µ—Ç–∞–Ω–∏—è –∫–ª–∞–≤–∏—à –¥–ª—è –±—ã—Å—Ç—Ä–æ–π —Ä–∞–±–æ—Ç—ã —Å —Ç–∞–±–ª–∏—Ü–µ–π
          </SheetDescription>
        </SheetHeader>

        <div className="mt-6 space-y-6">
          {categories.map(category => (
            <div key={category}>
              <h3 className="font-semibold text-sm mb-3 text-muted-foreground uppercase tracking-wider">
                {category}
              </h3>
              <div className="space-y-2">
                {shortcuts
                  .filter(s => s.category === category)
                  .map((shortcut, index) => (
                    <div
                      key={index}
                      className="flex items-center justify-between p-2 rounded-lg hover:bg-muted/50 transition-colors"
                    >
                      <span className="text-sm">{shortcut.description}</span>
                      <div className="flex gap-1">
                        {shortcut.keys.map((key, i) => (
                          <React.Fragment key={i}>
                            <kbd className="px-2 py-1 text-xs font-semibold text-foreground bg-muted border border-border rounded">
                              {key}
                            </kbd>
                            {i < shortcut.keys.length - 1 && (
                              <span className="text-muted-foreground text-xs self-center">+</span>
                            )}
                          </React.Fragment>
                        ))}
                      </div>
                    </div>
                  ))}
              </div>
            </div>
          ))}
        </div>

        <div className="mt-6 p-4 bg-primary/5 border border-primary/20 rounded-lg">
          <p className="text-sm text-muted-foreground">
            üí° <strong>–°–æ–≤–µ—Ç:</strong> –ù–∞ Mac –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ <kbd className="px-1 py-0.5 text-xs bg-muted border rounded">‚åò Cmd</kbd> –≤–º–µ—Å—Ç–æ <kbd className="px-1 py-0.5 text-xs bg-muted border rounded">Ctrl</kbd>
          </p>
        </div>
      </SheetContent>
    </Sheet>
  );
}
